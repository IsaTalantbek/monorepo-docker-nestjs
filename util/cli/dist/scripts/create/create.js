import { fileURLToPath } from 'url';
import path from 'path';
import { createApp } from './create-app/create.js';
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã create
export const createHandler = async (argv) => {
    const { type, silent } = argv;
    if (!type) {
        console.error('‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø (app): cli create <type>');
        process.exit(1);
    }
    // –†–µ–∞–ª–∏–∑—É–µ–º –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
    switch (type) {
        case 'app':
            silent === false ? console.log('üìÇ –°–æ–∑–¥–∞–Ω–∏–µ...') : null;
            const currentDir = path.dirname(fileURLToPath(import.meta.url));
            // –ü—É—Ç—å –∫ src
            const srcPath = path.join(currentDir, '../../samples/nest-app'); // –£—Ö–æ–¥–∏–º –Ω–∞ 2 —É—Ä–æ–≤–Ω—è –≤–≤–µ—Ä—Ö
            const destPath = path.join(process.cwd(), 'apps', 'project'); // —Ü–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞
            await createApp(srcPath, destPath);
            silent === false
                ? console.log(`–°–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ –ø—É—Ç–∏: ${destPath}`)
                : null;
            break;
        default:
            console.error('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã: app');
            process.exit(1);
    }
};
